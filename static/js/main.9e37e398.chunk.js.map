{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","listPosition","setListPosition","carouselContainerStyles","width","transitionDuration","overflow","carouselListStyles","length","height","transform","carouselWrapperStyles","className","style","map","image","index","src","alt","type","onClick","newPosition","Math","max","disabled","remainingImages","ceil","min","App","state","handleInputChange","event","target","id","setState","value","prevState","this","action","htmlFor","onChange","defaultChecked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e37e398.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport const Carousel: React.FC<CarouselProps> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [listPosition, setListPosition] = useState(0);\n\n  const handlePrev = () => {\n    const newPosition = listPosition - itemWidth * step;\n\n    if (infinite) {\n      setListPosition(\n        newPosition < 0\n          ? (images.length - frameSize) * itemWidth\n          : newPosition,\n      );\n    } else {\n      setListPosition(Math.max(newPosition, 0));\n    }\n  };\n\n  const handleNext = () => {\n    const remainingImages\n    = images.length - Math.ceil(listPosition / itemWidth);\n    let newPosition;\n\n    if (infinite) {\n      if (remainingImages < step) {\n        newPosition = 0;\n      } else {\n        newPosition = listPosition + itemWidth * step;\n        newPosition\n        = newPosition >= images.length * itemWidth\n            ? 0\n            : newPosition;\n      }\n    } else {\n      newPosition = listPosition + itemWidth * step;\n      newPosition = Math.min(\n        newPosition,\n        (images.length - frameSize) * itemWidth,\n      );\n    }\n\n    setListPosition(newPosition);\n  };\n\n  const carouselContainerStyles = {\n    width: `${itemWidth * frameSize}px`,\n    transitionDuration: `${animationDuration}ms`,\n    overflow: 'hidden',\n  };\n\n  const carouselListStyles = {\n    width: `${itemWidth * images.length}px`,\n    height: `${itemWidth}px`,\n    transitionDuration: `${animationDuration}ms`,\n    transform: `translateX(-${listPosition}px)`,\n  };\n\n  const carouselWrapperStyles = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  return (\n    <div className=\"Carousel\" style={carouselContainerStyles}>\n      <div className=\"Carousel__wrapper\" style={carouselWrapperStyles}>\n        <ul className=\"Carousel__list\" style={carouselListStyles}>\n          {images.map((image: string, index: number) => (\n            <li key={image} className=\"Carousel__item\">\n              <img\n                src={image}\n                alt={`${index}`}\n                width={itemWidth}\n                className=\"Carousel__image\"\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={handlePrev}\n        disabled={!infinite && listPosition === 0}\n      >\n        &lt; Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleNext}\n        data-cy=\"next\"\n        disabled={\n          !infinite\n          && listPosition >= (itemWidth * (images.length - frameSize))\n        }\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.target.id) {\n      case 'itemId':\n        this.setState({ itemWidth: +event.target.value });\n        break;\n      case 'frameId':\n        this.setState({ frameSize: +event.target.value });\n        break;\n      case 'stepId':\n        this.setState({ step: +event.target.value });\n        break;\n      case 'animationDuration':\n        this.setState({ animationDuration: +event.target.value });\n        break;\n\n      case 'infinite':\n        this.setState((prevState) => ({\n          infinite: !prevState.infinite,\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const { handleInputChange } = this;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form action=\"#\" className=\"carousel-form\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"carousel-form__label\"\n          >\n            Item width in px\n          </label>\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            className=\"carousel-form__input\"\n            value={itemWidth}\n            onChange={handleInputChange}\n          />\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"carousel-form__label\"\n          >\n            Frame size\n          </label>\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            className=\"carousel-form__input\"\n            value={frameSize}\n            onChange={handleInputChange}\n          />\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"carousel-form__label\"\n          >\n            Step\n          </label>\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            className=\"carousel-form__input\"\n            value={step}\n            onChange={handleInputChange}\n          />\n\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"carousel-form__label\"\n          >\n            Animation duration\n          </label>\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            className=\"carousel-form__input\"\n            value={animationDuration}\n            onChange={handleInputChange}\n          />\n\n          <label\n            htmlFor=\"infinite\"\n            className=\"carousel-form__label\"\n          >\n            Infinite\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              className=\"carousel-form__checkbox\"\n              defaultChecked={infinite}\n              onChange={handleInputChange}\n            />\n          </label>\n\n        </form>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}